// <auto-generated />
using System;
using LecturerManagermentCodeFirst.API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace LecturerManagermentCodeFirst.API.Migrations
{
    [DbContext(typeof(LecturerManagermentSystemDbContext))]
    [Migration("20211027155112_Add1")]
    partial class Add1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.10")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("LecturerManagermentCodeFirst.API.Entities.Account", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<string>("LecturerID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<byte[]>("PasswordHash")
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PasswordSalt")
                        .HasColumnType("varbinary(max)");

                    b.Property<int>("Permission")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("LecturerID")
                        .IsUnique()
                        .HasFilter("[LecturerID] IS NOT NULL");

                    b.ToTable("Accounts");
                });

            modelBuilder.Entity("LecturerManagermentCodeFirst.API.Entities.AdvancedLearning", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LecturerID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("SchoolYear")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("LecturerID");

                    b.ToTable("AdvancedLearnings");
                });

            modelBuilder.Entity("LecturerManagermentCodeFirst.API.Entities.Class", b =>
                {
                    b.Property<string>("ID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FormsOfTraining")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("NumberOfStudent")
                        .HasColumnType("int");

                    b.Property<string>("TrainingSystemID")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("ID");

                    b.HasIndex("TrainingSystemID");

                    b.ToTable("Classes");
                });

            modelBuilder.Entity("LecturerManagermentCodeFirst.API.Entities.DynamicClassFactor", b =>
                {
                    b.Property<string>("ID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<double>("Coefficient")
                        .HasColumnType("float");

                    b.Property<int?>("FromDynamic")
                        .HasColumnType("int");

                    b.Property<string>("TeachesForm")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ToDynamic")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("DynamicClassFactors");
                });

            modelBuilder.Entity("LecturerManagermentCodeFirst.API.Entities.GraduationThesis", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClassID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LecturerID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("MarkSessionNumbers")
                        .HasColumnType("int");

                    b.Property<int?>("RebuttalProjectNumbers")
                        .HasColumnType("int");

                    b.Property<string>("SchoolYear")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TopicNumbers")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("ClassID");

                    b.HasIndex("LecturerID");

                    b.ToTable("GraduationTheses");
                });

            modelBuilder.Entity("LecturerManagermentCodeFirst.API.Entities.Lecturer", b =>
                {
                    b.Property<string>("ID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AcademicLevel")
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IdentityCardNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Portrait")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PositionID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("StandardTimeID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("SubjectDepartmentID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("YearStartWork")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("PositionID");

                    b.HasIndex("StandardTimeID");

                    b.HasIndex("SubjectDepartmentID");

                    b.ToTable("Lecturers");
                });

            modelBuilder.Entity("LecturerManagermentCodeFirst.API.Entities.LecturerScientificResearch", b =>
                {
                    b.Property<string>("ID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LecturerID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LevelOfResearch")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("YearOfResearchParticipation")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("LecturerID");

                    b.ToTable("LecturerScientificResearches");
                });

            modelBuilder.Entity("LecturerManagermentCodeFirst.API.Entities.MachineRoom", b =>
                {
                    b.Property<string>("ID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LecturerID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("QantityRoom")
                        .HasColumnType("int");

                    b.Property<string>("SchoolYear")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("LecturerID");

                    b.ToTable("MachineRooms");
                });

            modelBuilder.Entity("LecturerManagermentCodeFirst.API.Entities.Position", b =>
                {
                    b.Property<string>("ID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DiscountPercent")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Positions");
                });

            modelBuilder.Entity("LecturerManagermentCodeFirst.API.Entities.ScientificResearchGuide", b =>
                {
                    b.Property<string>("ID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LecturerID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<string>("SchoolYear")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StudentYear")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("LecturerID");

                    b.ToTable("ScientificResearchGuides");
                });

            modelBuilder.Entity("LecturerManagermentCodeFirst.API.Entities.StandardTime", b =>
                {
                    b.Property<string>("ID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StandardHours")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("StandardTimes");
                });

            modelBuilder.Entity("LecturerManagermentCodeFirst.API.Entities.Subject", b =>
                {
                    b.Property<string>("ID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("QuantityUnit")
                        .HasColumnType("int");

                    b.Property<string>("SubjectTypeID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("TrainingSystemID")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("ID");

                    b.HasIndex("SubjectTypeID");

                    b.HasIndex("TrainingSystemID");

                    b.ToTable("Subjects");
                });

            modelBuilder.Entity("LecturerManagermentCodeFirst.API.Entities.SubjectDepartment", b =>
                {
                    b.Property<string>("ID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("SubjectDepartments");
                });

            modelBuilder.Entity("LecturerManagermentCodeFirst.API.Entities.SubjectType", b =>
                {
                    b.Property<string>("ID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("SubjectTypes");
                });

            modelBuilder.Entity("LecturerManagermentCodeFirst.API.Entities.Teaching", b =>
                {
                    b.Property<string>("SubjectID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LectureID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ClassID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NumberOfStudents")
                        .HasColumnType("int");

                    b.Property<string>("SchoolYear")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SubjectID", "LectureID", "ClassID");

                    b.HasIndex("ClassID");

                    b.HasIndex("LectureID");

                    b.ToTable("Teachings");
                });

            modelBuilder.Entity("LecturerManagermentCodeFirst.API.Entities.TrainingSystem", b =>
                {
                    b.Property<string>("ID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NumberOfLearningUnit")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("TrainingSystems");
                });

            modelBuilder.Entity("LecturerManagermentCodeFirst.API.Entities.Account", b =>
                {
                    b.HasOne("LecturerManagermentCodeFirst.API.Entities.Lecturer", "Lecturer")
                        .WithOne("Account")
                        .HasForeignKey("LecturerManagermentCodeFirst.API.Entities.Account", "LecturerID");

                    b.Navigation("Lecturer");
                });

            modelBuilder.Entity("LecturerManagermentCodeFirst.API.Entities.AdvancedLearning", b =>
                {
                    b.HasOne("LecturerManagermentCodeFirst.API.Entities.Lecturer", "Lecturer")
                        .WithMany("AdvancedLearnings")
                        .HasForeignKey("LecturerID");

                    b.Navigation("Lecturer");
                });

            modelBuilder.Entity("LecturerManagermentCodeFirst.API.Entities.Class", b =>
                {
                    b.HasOne("LecturerManagermentCodeFirst.API.Entities.TrainingSystem", "TrainingSystem")
                        .WithMany("Classes")
                        .HasForeignKey("TrainingSystemID");

                    b.Navigation("TrainingSystem");
                });

            modelBuilder.Entity("LecturerManagermentCodeFirst.API.Entities.GraduationThesis", b =>
                {
                    b.HasOne("LecturerManagermentCodeFirst.API.Entities.Class", "Class")
                        .WithMany("GraduationTheses")
                        .HasForeignKey("ClassID");

                    b.HasOne("LecturerManagermentCodeFirst.API.Entities.Lecturer", "Lecturer")
                        .WithMany("GraduationTheses")
                        .HasForeignKey("LecturerID");

                    b.Navigation("Class");

                    b.Navigation("Lecturer");
                });

            modelBuilder.Entity("LecturerManagermentCodeFirst.API.Entities.Lecturer", b =>
                {
                    b.HasOne("LecturerManagermentCodeFirst.API.Entities.Position", "Position")
                        .WithMany("Lecturers")
                        .HasForeignKey("PositionID");

                    b.HasOne("LecturerManagermentCodeFirst.API.Entities.StandardTime", "StandardTime")
                        .WithMany("Lecturers")
                        .HasForeignKey("StandardTimeID");

                    b.HasOne("LecturerManagermentCodeFirst.API.Entities.SubjectDepartment", "SubjectDepartment")
                        .WithMany("Lecturers")
                        .HasForeignKey("SubjectDepartmentID");

                    b.Navigation("Position");

                    b.Navigation("StandardTime");

                    b.Navigation("SubjectDepartment");
                });

            modelBuilder.Entity("LecturerManagermentCodeFirst.API.Entities.LecturerScientificResearch", b =>
                {
                    b.HasOne("LecturerManagermentCodeFirst.API.Entities.Lecturer", "Lecturer")
                        .WithMany("LecturerScientificResearches")
                        .HasForeignKey("LecturerID");

                    b.Navigation("Lecturer");
                });

            modelBuilder.Entity("LecturerManagermentCodeFirst.API.Entities.MachineRoom", b =>
                {
                    b.HasOne("LecturerManagermentCodeFirst.API.Entities.Lecturer", "Lecturer")
                        .WithMany("MachineRooms")
                        .HasForeignKey("LecturerID");

                    b.Navigation("Lecturer");
                });

            modelBuilder.Entity("LecturerManagermentCodeFirst.API.Entities.ScientificResearchGuide", b =>
                {
                    b.HasOne("LecturerManagermentCodeFirst.API.Entities.Lecturer", "Lecturer")
                        .WithMany("ScientificResearchGuides")
                        .HasForeignKey("LecturerID");

                    b.Navigation("Lecturer");
                });

            modelBuilder.Entity("LecturerManagermentCodeFirst.API.Entities.Subject", b =>
                {
                    b.HasOne("LecturerManagermentCodeFirst.API.Entities.SubjectType", "SubjectType")
                        .WithMany("Subjects")
                        .HasForeignKey("SubjectTypeID");

                    b.HasOne("LecturerManagermentCodeFirst.API.Entities.TrainingSystem", "TrainingSystem")
                        .WithMany("Subjects")
                        .HasForeignKey("TrainingSystemID");

                    b.Navigation("SubjectType");

                    b.Navigation("TrainingSystem");
                });

            modelBuilder.Entity("LecturerManagermentCodeFirst.API.Entities.Teaching", b =>
                {
                    b.HasOne("LecturerManagermentCodeFirst.API.Entities.Class", "Class")
                        .WithMany("Teachings")
                        .HasForeignKey("ClassID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LecturerManagermentCodeFirst.API.Entities.Lecturer", "Lecturer")
                        .WithMany("Teaches")
                        .HasForeignKey("LectureID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LecturerManagermentCodeFirst.API.Entities.Subject", "Subject")
                        .WithMany("Teachings")
                        .HasForeignKey("SubjectID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Class");

                    b.Navigation("Lecturer");

                    b.Navigation("Subject");
                });

            modelBuilder.Entity("LecturerManagermentCodeFirst.API.Entities.Class", b =>
                {
                    b.Navigation("GraduationTheses");

                    b.Navigation("Teachings");
                });

            modelBuilder.Entity("LecturerManagermentCodeFirst.API.Entities.Lecturer", b =>
                {
                    b.Navigation("Account");

                    b.Navigation("AdvancedLearnings");

                    b.Navigation("GraduationTheses");

                    b.Navigation("LecturerScientificResearches");

                    b.Navigation("MachineRooms");

                    b.Navigation("ScientificResearchGuides");

                    b.Navigation("Teaches");
                });

            modelBuilder.Entity("LecturerManagermentCodeFirst.API.Entities.Position", b =>
                {
                    b.Navigation("Lecturers");
                });

            modelBuilder.Entity("LecturerManagermentCodeFirst.API.Entities.StandardTime", b =>
                {
                    b.Navigation("Lecturers");
                });

            modelBuilder.Entity("LecturerManagermentCodeFirst.API.Entities.Subject", b =>
                {
                    b.Navigation("Teachings");
                });

            modelBuilder.Entity("LecturerManagermentCodeFirst.API.Entities.SubjectDepartment", b =>
                {
                    b.Navigation("Lecturers");
                });

            modelBuilder.Entity("LecturerManagermentCodeFirst.API.Entities.SubjectType", b =>
                {
                    b.Navigation("Subjects");
                });

            modelBuilder.Entity("LecturerManagermentCodeFirst.API.Entities.TrainingSystem", b =>
                {
                    b.Navigation("Classes");

                    b.Navigation("Subjects");
                });
#pragma warning restore 612, 618
        }
    }
}
